[
    {
        "projet": "<span>O</span>domo",
        "titre": "Implémentation d’une petite <span>station météorologique en Java</span>, renvoyant des données dans le terminal de sortie.",
        "image": "odomo.png",
        "figure": "Affichage de l’histogramme des températures des 60 dernières minutes après implémentation.",
        "resultat": "Code qui répond au besoin client, documenté de manière claire",
        "competences": [
            "Manipulation des  classes en Java",
            "Manipulation des tableaux 1D et 2D",
            "Etre autonome sur un projet de développement",
            "Rédaction de comptes rendus"
        ],
        "amelioration": "Ajouter une interface graphique",
        "outils": [
            {
                "image": "java.png",
                "nom": "Java"
            },
            {
                "image": "netbeans.png",
                "nom": "NetBeans"
            }
        ],
        "etapes": [
            "Prise en compte du besoin client",
            "Résolutions des problèmes d’affichage",
            "Implémentation de modes manquants ( Java, matrice 2D )",
            "Documentation et explication du travail réalisé"
        ],
        "voirPlus": "https://github.com/OceaneJF/odomo",
        "telecharger": "odomo.pdf"
    },
    {
        "projet": "<span>T</span>owa",
        "titre": "Implémentation d’un <span>jeu de stratégie</span> possédant 14 niveaux de difficulté en <span>Java</span>",
        "image": "towa.png",
        "figure": "Plateau de jeu",
        "resultat": "13 niveaux de jeu fonctionnels respectant les règles pour chaque niveau.",
        "competences": [
            "Manipulation des  classes en Java",
            "Manipulation des tableaux 1D et 2D",
            "Development de ma logique algorithmique",
            "Travailler avec des delais courts"
        ],
        "amelioration": "Rendre l’interface interactive en codant le jeu en C# avec Visual Studio",
        "outils": [
            {
                "image": "java.png",
                "nom": "Java"
            },
            {
                "image": "netbeans.png",
                "nom": "NetBeans"
            }
        ],
        "etapes": [
            "Appropriation du code initiale, reflexion sur les cas de tests",
            "Implémentation des tests unitaires ( JUnit, Hamcrest)",
            "Implémentation des niveaux de jeu (Java, matrice 2D)",
            "Optimisation du code "
        ],
        "voirPlus": "https://github.com/OceaneJF/Towa",
        "telecharger": "towa.pdf"
    },
    {
        "projet": "Towa <span>IA</span>",
        "titre": "Implémentation d’une <span> IA </span> en <span> Java </span> capable d'affronter les IA des autres participants lors de simulations journalières sur un <span> jeu de stratégie. </span>",
        "image": "towaIA.svg",
        "figure": "Graphique des résultats des tournois journaliers",
        "resultat": "Une IA fonctionnelle n’engendrant pas de disqualification et qui bat 90% des IA adversaires.",
        "competences": [
            "Manipulation des  classes en Java",
            "Maîtrise de Git pour le travail en équipe",
            "Développement de mon esprit logique",
            "Amélioration continue du code "
        ],
        "amelioration": "Rendre l’interface intéractive en codant le jeu en C# avec Visual Studio",
        "outils": [
            {
                "image": "java.png",
                "nom": "Java"
            },
            {
                "image": "netbeans.png",
                "nom": "NetBeans"
            },
            {
                "image": "GitLab.svg",
                "nom": "GitLab"
            }
        ],
        "etapes": [
            "Mise en place d’une stratégie et implémentation d’une IA (Java)",
            "Test de l’IA contre d’autres IA plus intelligentes ",
            "Amélioration de l’IA en fonction des retours aprés simulation",
            "Documentation et explication de la démarche logique  "
        ],
        "voirPlus": "https://github.com/OceaneJF/Towa-IA",
        "telecharger": "towaIA.pdf"
    },
    {
        "projet": "Création d’un <span>site web statique</span>",
        "titre": "Création d’un <span>site web </span> statique en <span> HTML/CSS </span> pour une entreprise innovante fictive",
        "image": "Web.svg",
        "figure": "Hero section du site web de l’entreprise fictive Alertgen",
        "resultat": "Site web statique complet composé de 5 pages, respectant la maquette et la norme W3C",
        "competences": [
            "Intégration d’une maquette en HTML/CSS",
            "Rendre un site responsive",
            "Réalisation de wireframes sur Figma",
            "Maîtrise de git/gitlab"
        ],
        "amelioration": "Ajouter du Javascript pour rendre le site dynamique ",
        "outils": [
            {
                "image": "HTMLCSS.svg",
                "nom": "HTML/CSS"
            },
            {
                "image": "VSCode.svg",
                "nom": "VScode"
            },
            {
                "image": "GitLab.svg",
                "nom": "GitLab"
            },
            {
                "image": "OVH.svg",
                "nom": "OVH"
            },
            {
                "image": "Figma.svg",
                "nom": "Figma"
            }
        ],
        "etapes": [
            "Réflexion sur une idée d’entreprise innovante et réalisation d’une fiche personas.",
            "Création de la maquette sur Figma ",
            "Integration de la maquette en HTML/CSS + responsive",
            "Validation W3C",
            "Hébergement du site ( OVH)"
        ],
        "voirPlus": "https://github.com/OceaneJF/site-vitrine-Alertgen",
        "telecharger": "web.pdf"
    },
    {
        "projet": "<span>Portfolio</span> V1",
        "titre": "Réalisation d’un <span>portfolio</span> présentant tous mes projets personnels en <span>HTML/CSS</span>",
        "image": "PortfolioV1.svg",
        "figure": " Hero section du portfolio",
        "resultat": "Un site web responsive présentant mes projets personnels",
        "competences": [
            "Intégration d’une maquette en HTML/CSS",
            "Rendre un site responsive",
            "Réalisation de wireframes sur Figma",
            "Hébergement d'un site web"
        ],
        "amelioration": "Rendre le site dynamique avec du Javascript",
        "outils": [
            {
                "image": "HTMLCSS.svg",
                "nom": "HTML/CSS"
            },
            {
                "image": "VSCode.svg",
                "nom": "VScode"
            },
            {
                "image": "OVH.svg",
                "nom": "OVH"
            },
            {
                "image": "Figma.svg",
                "nom": "Figma"
            }
        ],
        "etapes": [
            "Création d’une maquette sur Figma",
            "Intégration de la maquette avec HTML/CSS",
            "Rendre le site responsive",
            "Hébergement du site ( OVH)"
        ],
        "voirPlus": "https://github.com/OceaneJF/Portfoliov1",
        "telecharger": "v1.pdf"
    },
    {
        "projet": "Spooky <span>to do list</span>",
        "titre": "Implémentation d’une <span>to do list</span> dynamique avec <span>Javascript</span>",
        "image": "ToDoList.svg",
        "figure": "Image de la to do list",
        "resultat": "Une application to-do list fonctionnelle qui garde en mémoire les tâches à réaliser et dont l’image de fond est modifiable.",
        "competences": [
            "Intégration d’une maquette en HTML/CSS",
            "Programmation évenementielle avec Javascript",
            "Réalisation de wireframes sur Figma",
            "Utilisation du localStorage avec Javascript ",
            "Hébergement d’un site web."
        ],
        "amelioration": "Pouvoir créer plusieurs to do list par thème ",
        "outils": [
            {
                "image": "HTMLCSS.svg",
                "nom": "HTML/CSS"
            },
            {
                "image": "VSCode.svg",
                "nom": "VScode"
            },
            {
                "image": "OVH.svg",
                "nom": "OVH"
            },
            {
                "image": "Figma.svg",
                "nom": "Figma"
            },
            {
                "image": "Javascript.svg",
                "nom": "Javascript"
            }
        ],
        "etapes": [
            "Dessin du fond (tablette graphique) avec Ibis Paint X",
            "Création de la maquette Figma ",
            "Implémentation de la maquette avec HTML/CSS et Javascript",
            "Hébergement du site sur OVH"
        ],
        "voirPlus": "https://github.com/OceaneJF/spooky-to-do-list",
        "telecharger": "spooky.pdf"
    },
    {
        "projet": "Recherche <span>d'image</span>",
        "titre": "Implémentation en <span>Javascript</span> d’une application de <span>recherche d’images</span> avec l’API Unsplash",
        "image": "ImgSearch.svg",
        "figure": "Application de recherche d’image ",
        "resultat": "Un site web permettant de rechercher n’importe quelles images souhaitées et de les afficher ",
        "competences": [
            "Programmation évenementielle avec Javascript",
            "Utilisation d’une API"
        ],
        "amelioration": "Ajouter une description pour chaque image et les rendre cliquables pour les afficher en grand format.",
        "outils": [
            {
                "image": "HTMLCSS.svg",
                "nom": "HTML/CSS"
            },
            {
                "image": "VSCode.svg",
                "nom": "VScode"
            },
            {
                "image": "GitHub.svg",
                "nom": "GitHub"
            },
            {
                "image": "Javascript.svg",
                "nom": "Javascript"
            }
        ],
        "etapes": [
            "Etude du fonctionnement de l’API Unsplash",
            "Implémentation de la partie statique du site en HTML/CSS",
            "Implémentation de la partie dynamique du site avec Javascript"
        ],
        "voirPlus": "https://github.com/OceaneJF/Image_search",
        "telecharger": "imgsearch.pdf"
    },
    {
        "projet": "<span>Editeur</span> de graphe",
        "titre": "Implémentation d’un <span>éditeur de graphes en C#</span> possédant une <span>interface graphique</span>",
        "image": "Graph.svg",
        "figure": "Affichage obtenu sur l’interface graphique après implémentation de l’éditeur de graphes.",
        "resultat": "Éditeur de graphes fonctionnel permettant de créer un graphe et de le modifier.",
        "competences": [
            "Programmation événementielle en C#.",
            "Développement d’applications avec IHM.",
            "Maîtrise de la notion de propriété en C#.",
            "Autonomie"
        ],
        "amelioration": "Réaliser le projet en JS",
        "outils": [
            {
                "image": "C.svg",
                "nom": "C#"
            },
            {
                "image": "VisualStudio.svg",
                "nom": "Visual Studio"
            }
        ],
        "etapes": [
            "Prise en compte du cahier des charges",
            "Implémentation des différentes fonctionnalités (C#, programmation événementielle).",
            "Optimisation du code "
        ],
        "voirPlus": "https://github.com/OceaneJF/Editeur-de-graphe",
        "telecharger": "graph.pdf"
    },
    {
        "projet": "University deck <span>build duel</span>",
        "titre": "Implémentation d’un <span>jeu de cartes</span> en <span>C#</span> pour 2 joueurs dont l’objectif est de construire la plus belle université",
        "image": "JeuCarte.svg",
        "figure": "Interface du jeu terminé",
        "resultat": "Jeu de cartes fonctionnel respectant toutes les règles du jeu et jouable par deux joueurs.",
        "competences": [
            "Programmation événementielle en C#.",
            "Développement d’applicationb avec IHM",
            "Programmation orienté objet en C#",
            "Développement à partir d’un code existant"
        ],
        "amelioration": "Rendre le jeu multijoueur en utilisant les sockets",
        "outils": [
            {
                "image": "C.svg",
                "nom": "C#"
            },
            {
                "image": "VisualStudio.svg",
                "nom": "Visual Studio"
            }
        ],
        "etapes": [
            "Analyse du squelette du projet de depart",
            "Conception du diagramme UML du projet de départ",
            "Implémentation du jeu et mise à jour du diagramme UML",
            "Rédaction d’un compte rendu"
        ],
        "voirPlus": "https://github.com/OceaneJF/Jeu-de-carte",
        "telecharger": "deck.pdf"
    },
    {
        "projet": "Projet <span>Client POP3</span>",
        "titre": "Développement d’un <span>client POP3</span> en <span>C#</span> en mode graphique ",
        "image": "POP3.svg",
        "figure": "Interface graphique obtenue après avoir implémenté toutes les fonctionnalités.",
        "resultat": "Client de messagerie qui structure les informations brutes retournées par le serveur dans un format plus intelligible.",
        "competences": [
            "Utilisation du protocole POP3",
            "Programmation des Sockets TCP en C#",
            "Développement d’IHM",
            "Travail d’équipe "
        ],
        "amelioration": "Lire l'HTML renvoyé par le serveur et l'afficher dans une nouvelle fenêtre.",
        "outils": [
            {
                "image": "C.svg",
                "nom": "C#"
            },
            {
                "image": "VisualStudio.svg",
                "nom": "Visual Studio"
            }
        ],
        "etapes": [
            "Analyse fine du protocole POP3",
            "Gestion de la connexion au socket POP3",
            "Implémentation des fonctionnalités du client de messagerie (C#, POP3)",
            "Rédaction d’un compte rendu"
        ],
        "voirPlus": "https://github.com/OceaneJF/POP3",
        "telecharger": "pop3.pdf"
    },
    {
        "projet": "Installation d'une <span>machine virtuelle</span>",
        "titre": "Création, installation et configuration d’une <span>machine virtuelle</span> ",
        "image": "MV.svg",
        "figure": "Image de la machine virtuelle et schéma de son architecture logiciel",
        "resultat": "Machine virtuelle fonctionelle utilisant Lubuntu comme distribution et contenant toutes les dépendances nécessaires au fonctionnement du langage Haskell",
        "competences": [
            "Création, installation et configuration d’une machine virtuelle",
            "Utilisation du terminal sous Linux ",
            "Mise en place d’un environnement de developpement efficace",
            "Rédaction de documentation"
        ],
        "amelioration": "Mettre en place un débogueur ",
        "outils": [
            {
                "image": "VMware.svg",
                "nom": "VMware"
            },
            {
                "image": "Lubuntu.svg",
                "nom": "Lubuntu"
            },
            {
                "image": "bash.svg",
                "nom": "Bash"
            },
            {
                "image": "Linux.svg",
                "nom": "Linux"
            }
        ],
        "etapes": [
            "Choix de la distribution Linux (Debian,Linux Lite, Lubuntu)",
            "Allocation des ressources (RAM, CPU, Stockage)",
            "Installation du langage Haskell et des dépendances nécessaires à son bon fonctionnement.",
            "Rédaction d’une documentation et restitution oral "
        ],
        "voirPlus": "assets/pdf/virtualMachine.pdf",
        "telecharger": "vm.pdf"
    },
    {
        "projet": "Gestion des <span>prêts de documents</span>",
        "titre": "Implémentation d’un <span>script bash</span> permettant la manipulation de fichiers <span>JSON</span> via la librairie <span>jq</span>",
        "image": "ScriptBash.svg",
        "figure": "Exemple d’utilisation du script bash",
        "resultat": "Script Bash intégrant les fonctionnalités de gestion des emprunts de documents.",
        "competences": [
            "Utilisation de la librairie jq",
            "Réalisation de scripts en bash",
            "Travailler en équipe ",
            "Adaptabilité et autonomie face à la nouveauté (jq)"
        ],
        "amelioration": "Réaliser le projet en Javascript pour simplifier la manipulation des fichiers JSON ",
        "outils": [
            {
                "image": "JQ.svg",
                "nom": "jq"
            },
            {
                "image": "JSON.svg",
                "nom": "JSON"
            },
            {
                "image": "bash.svg",
                "nom": "Bash"
            },
            {
                "image": "Linux.svg",
                "nom": "Linux"
            }
        ],
        "etapes": [
            "Découverte de jq via sa documentation",
            "Developpement d’un script bash permettant la manipulation de fichiers JSON avec jq (CRUD)",
            "Correction et amélioration du script via l’outil ShellCheck",
            "Rédaction d’un compte rendu"
        ],
        "voirPlus": "https://github.com/OceaneJF/gestion-des-pr-ts",
        "telecharger": "jq.pdf"
    },
    {
        "projet": "Installation de <span>services réseaux</span>",
        "titre": "Installation et configuration de <span>services réseaux</span> et de leur clients lourds associés dans un <span>environnement virtuel</span> émulant un <span>réseau de machines</span> sous Debian",
        "image": "Reseau.svg",
        "figure": "Schema du reseau",
        "resultat": "Un réseau virtuel composé de clients légers (utilisateurs) pouvant interagir avec les clients lourds (Nextcloud et Onlyoffice).",
        "competences": [
            "Administration système et réseau sous Linux",
            "Installation et configuration de serveurs et de clients",
            "Production de documentation au format Markdown",
            "Travail d’équipe "
        ],
        "amelioration": "Ajouter d’autres services réseau",
        "outils": [
            {
                "image": "NEMU.svg",
                "nom": "NEMU"
            },
            {
                "image": "Nextcloud.svg",
                "nom": "Nextcloud"
            },
            {
                "image": "Debian.svg",
                "nom": "Debian"
            },
            {
                "image": "OnlyOffice.svg",
                "nom": "OnlyOffice"
            },
            {
                "image": "Linux.svg",
                "nom": "Linux"
            }
        ],
        "etapes": [
            "Configuration de l’adressage et du routage des machines du reseau",
            "Installation et configuration des serveurs (services Nextcloud et Onlyoffice)",
            "Installation et configuration des clients",
            "Production d’un tutoriel détaillé en anglais au format Markdown"
        ],
        "voirPlus": "https://github.com/OceaneJF/Installation-reseau",
        "telecharger": "reseau.pdf"
    },
    {
        "projet": "Création d’une <span>base de donnée</span>",
        "titre": "Création d’une <span>base de donnée</span> pour un projet fictif de <span>numérisation</span> d’une librairie",
        "image": "BD.svg",
        "figure": "Schéma relationnel de la base (MLR)",
        "resultat": "Base de donnée complète contenant des informations pertinantes répondant au besoins du client",
        "competences": [
            "Modélisation d’une base de donnée à partir des besoins du client",
            "Maitrise des requêtes SQL",
            "Maitrise du LDD",
            "Travail d’équipe"
        ],
        "amelioration": "Creer un formulaire permettant de remplir la base de donnée",
        "outils": [
            {
                "image": "WD.svg",
                "nom": "WinDesign"
            },
            {
                "image": "SQLSM.svg",
                "nom": "SQL Serveur management"
            },
            {
                "image": "SQL.svg",
                "nom": "SQL"
            }
        ],
        "etapes": [
            "Prise en compte du besoin client",
            "Réalisation d’un planning de réalisation et de répartition des tâches (Gantt)",
            "Conception du MCD sur WinDesign",
            "Génération du MLR et du script de création  en y ajoutant des contraintes ( LDD)",
            "Création d’un script de remplissage de la base pour la tester ( SQL)",
            "Rédaction d’un compte rendu "
        ],
        "voirPlus": "assets/pdf/RBD.pdf",
        "telecharger": "db.pdf"
    },
    {
        "projet": "<span>Pixel</span> War",
        "titre": "Création de la partie client d’un jeu appelé la <span>“Guerre des pixels”</span> en <span>Javascript</span> en utilisant une <span>API</span> existante",
        "image": "PixelWar.svg",
        "figure": "Interface utilisateur du jeu de la Guerre des pixels ",
        "resultat": "Interface permettant au joueur de jouer à la Guerre des pixels en temps réels avec d’autres joueurs ",
        "competences": [
            "Programmation événementielle avec Javascript",
            "Utilisation d’une API",
            "Utilisation d’un canvas",
            "Autonomie"
        ],
        "amelioration": "Rendre l’interface responsive",
        "outils": [
            {
                "image": "Javascript.svg",
                "nom": "Javascript"
            },
            {
                "image": "HTMLCSS.svg",
                "nom": "HTML/CSS"
            },
            {
                "image": "VSCode.svg",
                "nom": "VScode"
            }
        ],
        "etapes": [
            "Prise en compte du cahier des charges et du fonctionnement de l’API avec un Swagger",
            "Conception de l’interface utilisateur avec HTML et CSS",
            "Intégration de l’API dans l’application client avec Javascript",
            "Implémentation de nouvelles fonctionnalités ",
            "Test de debogage et ajout d’une JSDoc"
        ],
        "voirPlus": "https://github.com/OceaneJF/Pixel-war",
        "telecharger": "pixel.pdf"
    },
    {
        "projet": "Col'<span>mat</span>",
        "titre": "Création d’une <span>maquette</span> pour le <span>site web</span> d’une association Basque de recyclage de matériaux avec <span>Figma</span>",
        "image": "colmat.svg",
        "figure": "Maquette du site web de l’association",
        "resultat": "Un prototype de l’ensemble des pages du site version desktop et mobile respectant les règles de l’UX design et les attentes du client",
        "competences": [
            "UI/UX design",
            "Création de wireframe et de maquette sur Figma",
            "Création de prototype sur Figma",
            "Ecouter et communiquer avec un client"
        ],
        "amelioration": "Faire la maquette pour la version tablette",
        "outils": [
            {
                "image": "miro.svg",
                "nom": "Miro"
            },
            {
                "image": "Figma.svg",
                "nom": "Figma"
            }
        ],
        "etapes": [
            "Réalisation d’un moddboard sur Miro + Validation du client",
            "Réalisation du wireframe du site + Validation du client",
            "Réalisation de la maquette + Validation du client",
            "Réalisation du prototype"
        ],
        "voirPlus": "https://www.figma.com/design/TXtVrDbzKxhdcSkC45t8Ke/wireframe-association?node-id=0-1&t=TnHPmx6s0EkB7C9G-0",
        "telecharger": "colmat.pdf"
    },
    {
        "projet": "Logiciel de <span>visualisation</span> de données",
        "titre": "Développement d’un <span>logiciel de visualisation</span> de différents indicateurs environnementaux en <span>C#</span> et <span>Python</span>",
        "image": "secoBreath.png",
        "figure": "Interface graphique obtenue lorsque l’on souhaite voir la quantité de gaz à effet de serre émis par pays dans le monde",
        "resultat": "Logiciel permettant de visualiser simplement plusieurs indicateurs (gaz à effet de serre, PIB, population, prévision de température, etc.), à l’échelle mondiale (par pays et par continents) pour une ou plusieurs années.",
        "competences": [
            "Gestion de projet",
            "Visualisation de données en Python/GeoPandas",
            "Développement d'IHM",
            "Remplissage d'une base de données à partir de fichiers CSV"
        ],
        "amelioration": "Améliorer le design de l’interface pour que le logiciel soit plus intuitif et ajouter une barre de chargement.",
        "outils": [
            {
                "image": "VisualStudio.svg",
                "nom": "Visual Studio"
            },
            {
                "image": "WD.svg",
                "nom": "WinDesign"
            },
            {
                "image": "SQLSM.svg",
                "nom": "SQL Serveur management"
            },
            {
                "image": "VSCode.svg",
                "nom": "VScode"
            },
            {
                "image": "C.svg",
                "nom": "C#"
            },
            {
                "image": "SQL.svg",
                "nom": "SQL"
            },
            {
                "image": "Python.svg",
                "nom": "Python"
            },
            {
                "image": "geoPandas.svg",
                "nom": "GeoPandas"
            }
        ],
        "etapes": [
            "Rédaction des spécifications et du plan de projet",
            "Conception puis remplissage de la base de données",
            "Implémentation des scripts Python/GeoPandas",
            "Développement de l'interface en C# et liaison avec les scripts",
            "Rédaction de comptes rendus, présentation orale et démonstration de l’application"
        ],
        "voirPlus": "https://github.com/OceaneJF/Logiciel-visualisation",
        "telecharger": "ecoBreath.pdf"
    },
    {
        "projet": "Application de <span>visualisation</span> de <span>graphes</span>",
        "titre": "Développement d’une application de <span>visualisation</span>  de <span>graphe</span> en <span>Java</span>",
        "image": "US.png",
        "figure": "Interface graphique obtenue lorsque l’on choisit de visualiser le graphe des migrations aux États-Unis.",
        "resultat": "Une application fonctionnelle permettant de visualiser des graphes en évitant tout “bruit visuel” induit par le nombre important de croisements d’arêtes.",
        "competences": [
            "Développement orienté objet en Java",
            "Maîtrise de Git/GitLab pour le travail d’équipe",
            "Conception et optimisation d’algorithmes pour le traitement et la visualisation de graphes",
            "Travail en équipe"
        ],
        "amelioration": "Implémenter davantage de tests unitaires",
        "outils": [
            {
                "image": "VSCode.svg",
                "nom": "VScode"
            },
            {
                "image": "GitLab.svg",
                "nom": "GitLab"
            },
            {
                "image": "java.png",
                "nom": "Java"
            }
        ],
        "etapes": [
            "Appropriation du code initial et réflexion sur les cas de test",
            "Implémentation des tests unitaires (JUnit et Hamcrest)",
            "Implémentation de l'application et rédaction de la JavaDoc",
            "Réalisation des tests fonctionnels",
            "Rédaction d’un compte rendu"
        ],
        "voirPlus": "https://github.com/OceaneJF/Visualisation-de-graphe",
        "telecharger": "visuGraphe.pdf"
    },
    {
        "projet": "<span>P</span>ierre, <span>P</span>apier, <span>C</span>iseaux",
        "titre": "Développement d'un <span>jeu de Pierre-Papier-Ciseaux</span> interactif en <span>JavaScript</span> permettant à l’utilisateur de jouer contre l'ordinateur.",
        "image": "PPC.png",
        "figure": "Interface du jeu ",
        "resultat": "Un jeu de Pierre-Papier-Ciseaux fonctionnel, affichant le score actuel du joueur et de l'ordinateur après chaque coup, ainsi qu'un message indiquant si le joueur a gagné, perdu ou fait match nul.",
        "competences": [
            "Intégration d’une maquette en HTML/CSS",
            "Programmation évenementielle avec Javascript",
            "Réalisation de wireframes sur Figma",
            "Hébergement d’un site web"
        ],
        "amelioration": "Rendre le jeu multijoueur",
        "outils": [
            {
                "image": "VSCode.svg",
                "nom": "VScode"
            },
            {
                "image": "HTMLCSS.svg",
                "nom": "HTML/CSS"
            },
            {
                "image": "Javascript.svg",
                "nom": "Javascript"
            },
            {
                "image": "Figma.svg",
                "nom": "Figma"
            },
            {
                "image": "GitHub.svg",
                "nom": "GitHub"
            }
        ],
        "etapes": [
            "Réalisation de la maquette sur figma ",
            "Intégration de la maquette  (HTML/CSS)+responsive",
            "Implémentation de la partie dynamique (JavaScript)",
            "Réalisation de tests fonctionnels"
        ],
        "voirPlus": "https://github.com/OceaneJF/rock-paper-scissors-game",
        "telecharger": "JeuPPC.pdf"
    },
    {
        "projet": "<span>Site vitrine</span> DJeff ",
        "titre": "Création d'un <span>site vitrine WordPress</span> pour un <span>DJ</span> basé à Bayonne, mettant en avant ses services et prestations.",
        "image": "siteWP.png",
        "figure": "Hero section du site vitrine ",
        "resultat": "Un site vitrine personnalisé  présentant ses services, tarifs, et prestations DJ, avec un formulaire de contact et un calendrier interactif pour consulter ses disponibilités.",
        "competences": [
            "Installation, configuration, et personnalisation de thèmes et plugins Wordpress",
            "Ecouter et communiquer avec un client",
            "Réalisation de wireframes sur Figma",
            "Hébergement d’un site web"
        ],
        "amelioration": "Optimiser le site pour les moteurs de recherche afin d'améliorer sa visibilité en ligne et coder le calendrier en PHP",
        "outils": [
            {
                "image": "WP.png",
                "nom": "WordPress"
            },
            {
                "image": "HTMLCSS.svg",
                "nom": "HTML/CSS"
            },
            {
                "image": "Javascript.svg",
                "nom": "Javascript"
            },
            {
                "image": "Figma.svg",
                "nom": "Figma"
            }
        ],
        "etapes": [
            "Prise en compte du besoin client",
            "Création d’un wireframe sur figma + validation du client",
            "Intégration de la maquette avec Wordpress elementor",
            "Ajout du text et des images fournies par le client",
            "Mise en ligne du site"
        ],
        "voirPlus": "https://dj-bayonne.fr/",
        "telecharger": "siteDJeff.pdf"
    },
    {
        "projet": "<span>Job</span>Track",
        "titre": "Développement d'une <span>application web</span> de <span>gestion d'offres d'emploi ( React / PHP ) </span> ",
        "image": "JobTrackDashboard.png",
        "figure": "Dasboard de Jobtrack",
        "resultat": "Une application web permettant, après inscription et connexion, d'enregistrer des informations sur les entreprises auxquelles on souhaite postuler ou a déjà postulé, ainsi que des informations personnelles comme le CV, la lettre de motivation, etc.",
        "competences": [
            "Création d'interfaces interactives avec composants réutilisables en React",
            "Développement d'API en PHP",
            "Modiliser et créer une base de donnée en fonction des besoins",
            "Gestion de l’authentification via token JWT"
        ],
        "amelioration": "Ajouter des filtres pour retrouver plus facilement les entreprises et notifier l’utilisateur après 2 semaines pour qu’il puisse faire une relance.",
        "outils": [
            {
                "image": "React.png",
                "nom": "React"
            },
            {
                "image": "Tailwind.png",
                "nom": "TailwindCSS"
            },
            {
                "image": "PHP.png",
                "nom": "PHP"
            },
            {
                "image": "Figma.svg",
                "nom": "Figma"
            },
            {
                "image": "WebStorm.png",
                "nom": "WebStorm"
            },
            {
                "image": "PHPMyAdmin.png",
                "nom": "PHPMyAdmin"
            },
            {
                "image": "PHPStorm.png",
                "nom": "PHPStorm"
            },
            {
                "image": "GitHub.svg",
                "nom": "GitHub"
            }
        ],
        "etapes": [
            "Création d’un wireframe sur figma ",
            "Création de la base de donnée ( PHPMyAdmin )",
            "Implémentation de l’API en PHP ",
            "Implémentation du front et connection à l’API (React / Tailwind)",
            "Mise en ligne du site"
        ],
        "voirPlus": "https://jobtrack.oceane-jf.fr/",
        "telecharger": "JobTrack.pdf"
    },
    {
        "projet": "<span>Labyrinthe</span>",
        "titre": "Développement d'un<span> jeu de labyrinthe</span> en<span> Java/JavaFX</span> ",
        "image": "LabAffichage.png",
        "figure": "Affichage du 1er étage du labyrinthe",
        "resultat": "Un jeu de labyrinthe multi-étages où un personnage doit éviter des monstres qui se déplacent aléatoirement. En cas de collision avec un monstre, le personnage meurt.",
        "competences": [
            "Développement orienté objet en Java",
            "Utilisation de l'héritage et du polymorphisme",
            "Affichage graphique avec JavaFX",
            "Modélisation avec diagrammes UML",
            "Création de tests unitaires"
        ],
        "amelioration": "Afficher le chemin le plus court vers la sortie avec la bibliothèque JGraphT.",
        "outils": [
            {
                "image": "java.png",
                "nom": "Java"
            },
            {
                "image": "javaFX.png",
                "nom": "JavaFX"
            },
            {
                "image": "GitLab.svg",
                "nom": "GitLab"
            },
            {
                "image": "netbeans.png",
                "nom": "NetBeans"
            }
        ],
        "etapes": [
            "Analyse du code existant",
            "Réalisation du diagramme UML du code initial",
            "Implémentation de l’API en PHP ",
            "Implémentation des fonctionnalités du jeu",
            "Mise en place de tests unitaires"
        ],
        "voirPlus": "https://github.com/OceaneJF/labyrinthe",
        "telecharger": "labyrinthe.pdf"
    },
    {
        "projet": "<span>Pawfect</span> sitter",
        "titre": "Développement d’une plateforme de <span>gestion d’annonces</span> de <span>pet sitting</span> avec <span>Symfony</span> et <span>Vue.js.</span>",
        "image": "pawfect.png",
        "figure": "Page d’accueil de pawfect sitter",
        "resultat": "Plateforme de publication et consultation d’annonces de pet sitting avec fonctionnalités d'authentification (inscription et connexion). Une fois connecté, l’utilisateur peut créer et publier des annonces, compléter son profil, et consulter les annonces des autres utilisateurs.",
        "competences": [
            "Développement d'applications web avec Symfony",
            "Création d'interfaces dynamique en Vue.js",
            "Modiliser une base de donnée en fonction des besoins",
            "Intégration d'interfaces avec Twig et TailwindCSS"
        ],
        "amelioration": "Ajouter des filtres (trier les annonces par date et par ville), ajouter une fonctionnalité de favoris, et améliorer le design.",
        "outils": [
            {
                "image": "symfony.png",
                "nom": "Symfony"
            },
            {
                "image": "vue.png",
                "nom": "Vue.js"
            },
            {
                "image": "twig.png",
                "nom": "Twig"
            },
            {
                "image": "Tailwind.png",
                "nom": "TailwindCSS"
            },
            {
                "image": "PHPMyAdmin.png",
                "nom": "PHPMyAdmin"
            },
            {
                "image": "PHPStorm.png",
                "nom": "PHPStorm"
            },
            {
                "image": "GitHub.svg",
                "nom": "GitHub"
            },
            {
                "image": "Figma.svg",
                "nom": "Figma"
            }
        ],
        "etapes": [
            "Conception : Wireframes sur Figma et schéma entité-association pour la base de données.",
            "Initialisation du projet Symfony ",
            "Création des modèles (entités) et des contrôleurs (Symfony)",
            "Implémentation de l'interface + responsive (Vue.js, Twig, TailwindCSS)",
            "Déploiement de l’application"
        ],
        "voirPlus": "https://github.com/OceaneJF/pawfect-sitter",
        "telecharger": "pawfect.pdf"
    },
    {
        "projet": "<span>Vagues</span> et <span>Veines</span>",
        "titre": "Création d’un <span>blog</span> explorant les parallèles entre le corps humain et l’océan, développé avec <span>Symfony</span> et <span>TailwindCSS</span>",
        "image": "V&VA.png",
        "figure": "Page d’accueil du blog",
        "resultat": "Un blog doté d’un système d’authentification complet (inscription et connexion), permettant de consulter des articles, d’en créer, ainsi que de modifier ou supprimer ses propres publications.",
        "competences": [
            "Développement d'applications web avec Symfony",
            "Gestion des bases de données relationnelles avec Doctrine",
            "Création d’interfaces web avec Twig et TailwindCSS",
            "Implémentation complète de fonctionnalités CRUD"
        ],
        "amelioration": "Rendre le site entièrement responsive, ajouter une page de contact, intégrer des fonctionnalités de tri des articles",
        "outils": [
            {
                "image": "symfony.png",
                "nom": "Symfony"
            },
            {
                "image": "twig.png",
                "nom": "Twig"
            },
            {
                "image": "Tailwind.png",
                "nom": "TailwindCSS"
            },
            {
                "image": "PHPMyAdmin.png",
                "nom": "PHPMyAdmin"
            },
            {
                "image": "PHPStorm.png",
                "nom": "PHPStorm"
            },
            {
                "image": "GitHub.svg",
                "nom": "GitHub"
            }
        ],
        "etapes": [
            "Définition des fonctionalités et Modélisation des entités et relations dans la base de données",
            "Création des contrôleurs , routes et entités avec Symfony et gestion des droits d’accès ",
            "Création des pages dynamiques et des formulaires avec Twig et TailwindCSS",
            "Finalisation et déploiement"
        ],
        "voirPlus": "https://github.com/OceaneJF/VicTeam",
        "telecharger": "V&V.pdf"
    },
    {
        "projet": "<span>MiniRSA</span>",
        "titre": "Développement d’un système de <span>cryptographie asymétrique</span> avec signature numérique et génération de certificats en <span>Python</span>",
        "image": "rdmMiniRSA.png",
        "figure": "README du projet",
        "resultat": "Un système fonctionnel de cryptographie asymétrique capable de : chiffrer et déchiffrer des messages, générer et vérifier des signatures numériques, créer et valider des certificats publics via un organisme certificateur.",
        "competences": [
            "Maîtrise des concepts de cryptographie asymétrique et des mathématiques associées",
            "Gestion de projet collaboratif avec Git/GitLab",
            "Programmation orienté objet en Python",
            "Réalisation de tests unitaires avec Pytest"
        ],
        "amelioration": "Optimisation des algorithmes pour des messages de grande taille, ajout d’une interface utilisateur, étendre le projet pour inclure des fonctionnalités réseau simulées ",
        "outils": [
            {
                "image": "Python.svg",
                "nom": "Python"
            },
            {
                "image": "pytest.png",
                "nom": "Pytest"
            },
            {
                "image": "GitLab.svg",
                "nom": "GitLab"
            },
            {
                "image": "VSCode.svg",
                "nom": "VScode"
            }
        ],
        "etapes": [
            "Implémentation des bases de la cryptographie asymétrique (clés publiques et privées, chiffrement, déchiffrement)",
            "Implémentation de la signature numérique et d’un algorithm de hashage",
            "Implémentation d’un certificat pour une clé publique, signé par une autorité de certification ",
            "Implémentation du test de primalité de Miller-Rabin",
            "Ajout de la prise en charge des messages textes pour le chiffrement, déchiffrement et signature"
        ],
        "voirPlus": "https://github.com/OceaneJF/MiniRSA",
        "telecharger": "MiniRSA.pdf"
    },
    {
        "projet": "<span>RobotChamp</span>",
        "titre": "Création d'une <span>application</span> dédiée à la gestion des <span>compétitions</span> de football pour robots en <span>Symfony</span> et <span>TailwindCSS</span>.",
        "image": "accueilRobotChamp.png",
        "figure": "Page d’accueil de l’application",
        "resultat": "Plateforme gérant toutes les étapes d’une compétition de football pour robots, avec un système sécurisé pour la gestion des utilisateurs, des équipes et des compétitions. Interface responsive et automatisation des tâches complexes, comme la génération de créneaux et la planification des rencontres.",
        "competences": [
            "Développement d'applications web avec Symfony",
            "Gestion de données MySQL et fixtures",
            "Interfaces responsives en Twig/TailwindCSS",
            "Gestion de projet en méthodologie Agile"
        ],
        "amelioration": "Ajout d’un système de rencontres éliminatoires.",
        "outils": [
            {
                "image": "symfony.png",
                "nom": "Symfony"
            },
            {
                "image": "twig.png",
                "nom": "Twig"
            },
            {
                "image": "Tailwind.png",
                "nom": "TailwindCSS"
            },
            {
                "image": "PHPMyAdmin.png",
                "nom": "PHPMyAdmin"
            },
            {
                "image": "GitLab.svg",
                "nom": "GitLab"
            },
            {
                "image": "VSCode.svg",
                "nom": "VScode"
            }
        ],
        "etapes": [
            "Planification : définition de l’incrément et priorisation des US",
            "Sprint backlog : sélection des US à réaliser durant le sprint (Issue Board sur GitLab)",
            "Sprint : production de l’incrément avec daily meetings pour le suivi",
            "Démo : présentation de l’incrément au PO et recueil des retours",
            "Sprint rétrospective : analyse des axes d’amélioration pour le prochain sprint"
        ],
        "voirPlus": "https://github.com/OceaneJF/RobotChamp",
        "telecharger": "RobotChamp.pdf"
    }
]